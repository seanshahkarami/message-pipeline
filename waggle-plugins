#!/usr/bin/env python3
import argparse
import json
import subprocess
import os


def exec_rabbitmqctl(args):
    rabbitmqctl = ['docker', 'exec', '-ti', 'rabbitmq-dev', 'rabbitmqctl']
    return subprocess.run(rabbitmqctl + args)


def add_rabbitmq_user(username, password):
    inqueue = 'in-' + username

    exec_rabbitmqctl(['add_user', username, password])

    config_permissions = '^{}$'.format(inqueue)
    write_permissions = '^data$'
    read_permissions = '^{}$'.format(inqueue)

    for vhost in ['node1', 'node2']:
        exec_rabbitmqctl([
            'set_permissions',
            '-p', vhost,
            username,
            config_permissions,
            write_permissions,
            read_permissions,
        ])


def enable_plugin(plugin_dir):
    token = '21bfa177f9a3bd662e1d53c10ce8072ac6ac907f397d311f3993b956cf2f9a9c'
    add_rabbitmq_user(plugin_dir, token)


def read_config_file(filename):
    with open(filename) as file:
        return json.load(file)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('plugin_dir')
    args = parser.parse_args()

    plugin_dir = os.path.abspath(args.plugin_dir)

    config = read_config_file(os.path.join(plugin_dir, 'plugin.json'))

    user_id = 'plugin-{}-{}-{}'.format(
        config['plugin_id'],
        config['plugin_version'],
        config['plugin_instance'])

    print('enable', user_id)
    enable_plugin(user_id)


if __name__ == '__main__':
    main()

#!/usr/bin/env python3
import json
import re
import subprocess


def get_certfile_subject(filename):
    output = subprocess.check_output([
        'openssl',
        'x509',
        '-noout',
        '-subject',
        '-in', filename,
    ])

    return dict(re.findall('/([^=]+)=([^/]+)', output.decode().strip()))


def main():
    subject = get_certfile_subject('/usr/lib/waggle/SSL/node/cert.pem')
    username = subject['CN']

    shovel_config = {
        'src-uri': 'amqp://',
        'src-queue': 'to-beehive',
        'dest-uri': 'amqps://beehive:23181?auth_mechanism=external&cacertfile=/usr/lib/waggle/SSL/waggleca/cacert.pem&certfile=/usr/lib/waggle/SSL/node/cert.pem&keyfile=/usr/lib/waggle/SSL/node/key.pem&verify=verify_peer',
        'dest-exchange': 'messages',
        'publish-properties': {
            'delivery_mode': 2,
            'user_id': username,
        }
    }

    subprocess.check_output([
        'rabbitmqctl',
        'set_parameter',
        'shovel',
        'push-to-beehive',
        json.dumps(shovel_config),
    ])

    shovel_config = {
        'src-uri': 'amqps://beehive:23181?auth_mechanism=external&cacertfile=/usr/lib/waggle/SSL/waggleca/cacert.pem&certfile=/usr/lib/waggle/SSL/node/cert.pem&keyfile=/usr/lib/waggle/SSL/node/key.pem&verify=verify_peer',
        'src-queue': 'to-{}'.format(username),
        'dest-uri': 'amqp://',
        'dest-queue': 'messages',
        'publish-properties': {
            'delivery_mode': 2,
        }
    }

    subprocess.check_output([
        'rabbitmqctl',
        'set_parameter',
        'shovel',
        'pull-from-beehive',
        json.dumps(shovel_config),
    ])


if __name__ == '__main__':
    main()
